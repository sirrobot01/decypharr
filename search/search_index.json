{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Decypharr","text":"<p>Decypharr is an implementation of QbitTorrent with Multiple Debrid service support, written in Go.</p>"},{"location":"#what-is-decypharr","title":"What is Decypharr?","text":"<p>TLDR; Decypharr is a self-hosted, open-source download client that integrates with multiple Debrid services. It provides a user-friendly interface for managing files and supports popular media management applications like Sonarr and Radarr.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Mock Qbittorent API that supports Sonarr, Radarr, Lidarr, and other Arr applications</li> <li>Multiple Debrid providers support</li> <li>WebDAV server support for each Debrid provider with an optional mounting feature(using rclone)</li> <li>Repair Worker for missing files, symlinks etc</li> </ul>"},{"location":"#supported-debrid-providers","title":"Supported Debrid Providers","text":"<ul> <li>Real Debrid</li> <li>Torbox</li> <li>Debrid Link</li> <li>All Debrid</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Check out our Installation Guide to get started with Decypharr.</p>"},{"location":"api/","title":"API Documentation","text":"<p>Decypharr provides a RESTful API for managing torrents, debrid services, and Arr integrations. The API requires authentication and all endpoints are prefixed with <code>/api</code>.</p>"},{"location":"api/#authentication","title":"Authentication","text":"<p>The API supports two authentication methods:</p>"},{"location":"api/#1-session-based-authentication-cookies","title":"1. Session-based Authentication (Cookies)","text":"<p>Log in through the web interface (<code>/login</code>) to establish an authenticated session. The session cookie (<code>auth-session</code>) will be automatically included in subsequent API requests from the same browser session.</p>"},{"location":"api/#2-api-token-authentication-bearer-token","title":"2. API Token Authentication (Bearer Token)","text":"<p>Use API tokens for programmatic access. Include the token in the <code>Authorization</code> header for each request:</p> <ul> <li><code>Authorization: Bearer &lt;your-token&gt;</code></li> </ul>"},{"location":"api/#interactive-api-documentation","title":"Interactive API Documentation","text":""},{"location":"api/#api-endpoints-overview","title":"API Endpoints Overview","text":""},{"location":"api/#arrs-management","title":"Arrs Management","text":"<ul> <li><code>GET /api/arrs</code> - Get all configured Arr applications (Sonarr, Radarr, etc.)</li> </ul>"},{"location":"api/#content-management","title":"Content Management","text":"<ul> <li><code>POST /api/add</code> - Add torrent files or magnet links for processing through debrid services</li> </ul>"},{"location":"api/#repair-operations","title":"Repair Operations","text":"<ul> <li><code>POST /api/repair</code> - Start repair process for media items</li> <li><code>GET /api/repair/jobs</code> - Get all repair jobs</li> <li><code>POST /api/repair/jobs/{id}/process</code> - Process a specific repair job</li> <li><code>POST /api/repair/jobs/{id}/stop</code> - Stop a running repair job</li> <li><code>DELETE /api/repair/jobs</code> - Delete multiple repair jobs</li> </ul>"},{"location":"api/#torrent-management","title":"Torrent Management","text":"<ul> <li><code>GET /api/torrents</code> - Get all torrents</li> <li><code>DELETE /api/torrents/{category}/{hash}</code> - Delete a specific torrent</li> <li><code>DELETE /api/torrents/</code> - Delete multiple torrents</li> </ul>"},{"location":"api/#usage-examples","title":"Usage Examples","text":""},{"location":"api/#adding-content-via-api","title":"Adding Content via API","text":""},{"location":"api/#using-api-token","title":"Using API Token:","text":"<pre><code>curl -H \"Authorization: Bearer $API_TOKEN\" -X POST http://localhost:8080/api/add \\\n  -F \"arr=sonarr\" \\\n  -F \"debrid=realdebrid\" \\\n  -F \"urls=magnet:?xt=urn:btih:...\" \\\n  -F \"downloadUncached=true\"\n  -F \"file=@/path/to/torrent/file.torrent\"\n  -F \"callbackUrl=http://your.callback.url/endpoint\"\n</code></pre>"},{"location":"api/#using-session-cookies","title":"Using Session Cookies:","text":"<pre><code># Login first (this sets the session cookie)\ncurl -c cookies.txt -X POST http://localhost:8080/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\": \"your_username\", \"password\": \"your_password\"}'\n\n# Then use the session cookie for API calls\ncurl -b cookies.txt -X POST http://localhost:8080/api/add \\\n  -F \"arr=sonarr\" \\\n  -F \"debrid=realdebrid\" \\\n  -F \"urls=magnet:?xt=urn:btih:...\" \\\n  -F \"downloadUncached=true\"\n</code></pre>"},{"location":"api/#getting-torrents","title":"Getting Torrents","text":"<pre><code># With API token\ncurl -H \"Authorization: Bearer $API_TOKEN\" -X GET http://localhost:8080/api/torrents\n</code></pre>"},{"location":"api/#starting-a-repair-job","title":"Starting a Repair Job","text":"<pre><code># With API token\ncurl -H \"Authorization: Bearer $API_TOKEN\" -X POST http://localhost:8080/api/repair \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"arrName\": \"sonarr\",\n    \"mediaIds\": [\"123\", \"456\"],\n    \"autoProcess\": true,\n    \"async\": true\n  }'\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>There are multiple ways to install and run Decypharr. Choose the method that works best for your setup.</p>"},{"location":"installation/#docker-installation-recommended","title":"Docker Installation (Recommended)","text":"<p>Docker is the easiest way to get started with Decypharr.</p>"},{"location":"installation/#available-docker-registries","title":"Available Docker Registries","text":"<p>You can use either Docker Hub or GitHub Container Registry to pull the image:</p> <ul> <li>Docker Hub: <code>cy01/blackhole:latest</code></li> <li>GitHub Container Registry: <code>ghcr.io/sirrobot01/decypharr:latest</code></li> </ul>"},{"location":"installation/#docker-tags","title":"Docker Tags","text":"<ul> <li><code>latest</code>: The latest stable release</li> <li><code>beta</code>: The latest beta release</li> <li><code>vX.Y.Z</code>: A specific version (e.g., <code>v0.1.0</code>)</li> <li><code>experimental</code>: The latest experimental build (highly unstable)</li> </ul>"},{"location":"installation/#docker-cli-setup","title":"Docker CLI Setup","text":"<p>Pull the Docker image: <pre><code>docker pull cy01/blackhole:latest\n</code></pre> Run the Docker container: <pre><code>docker run -d \\\n  --name decypharr \\\n  --restart unless-stopped \\\n  -p 8282:8282 \\\n  -v /mnt/:/mnt:rshared \\\n  -v ./config/:/app \\\n  --device /dev/fuse:/dev/fuse:rwm \\\n  --cap-add SYS_ADMIN \\\n  --security-opt apparmor:unconfined \\\n  cy01/blackhole:latest\n</code></pre></p>"},{"location":"installation/#docker-compose-setup","title":"Docker Compose Setup","text":"<p>Create a <code>docker-compose.yml</code> file with the following content:</p> <pre><code>services:\n  decypharr:\n    image: cy01/blackhole:latest\n    container_name: decypharr\n    ports:\n      - \"8282:8282\"\n    volumes:\n      - /mnt/:/mnt:rshared\n      - ./config/:/app\n    restart: unless-stopped\n    devices:\n      - /dev/fuse:/dev/fuse:rwm\n    cap_add:\n      - SYS_ADMIN\n    security_opt:\n      - apparmor:unconfined\n</code></pre> <p>Run the Docker Compose setup: <pre><code>docker-compose up -d\n</code></pre></p>"},{"location":"installation/#binary-installation","title":"Binary Installation","text":"<p>If you prefer not to use Docker, you can download and run the binary directly.</p> <p>Download your OS-specific release from the release page. Create a configuration file (see Configuration) Run the binary:</p> <pre><code>chmod +x decypharr\n./decypharr --config /path/to/config/folder\n</code></pre>"},{"location":"installation/#notes-for-docker-users","title":"Notes for Docker Users","text":"<ul> <li>Ensure that the <code>/mnt/</code> directory is mounted correctly to access your media files.</li> <li>You can adjust the <code>PUID</code> and <code>PGID</code> environment variables to match your user and group IDs for proper file permissions.</li> <li>The <code>UMASK</code> environment variable can be set to control file permissions created by Decypharr.</li> </ul>"},{"location":"installation/#health-checks","title":"Health Checks","text":"<ul> <li>Health checks are disabled by default. You can enable them by adding a <code>healthcheck</code> section in your <code>docker-compose.yml</code> file.</li> <li>Health checks the availability of several parts of the application;<ul> <li>The main web interface</li> <li>The qBittorrent API</li> <li>The WebDAV server (if enabled). You should disable health checks for the initial indexes as they can take a long time to complete.</li> </ul> </li> </ul> <pre><code>services:\n  decypharr:\n    ...\n    ...\n    healthcheck:\n      test: [\"CMD\", \"/usr/bin/healthcheck\", \"--config\", \"/app/\"]\n      interval: 10s\n      timeout: 10s\n      retries: 3\n</code></pre>"},{"location":"usage/","title":"Usage Guide","text":"<p>This guide will help you get started with Decypharr after installation.</p> <p>After installing Decypharr, you can access the web interface at <code>http://localhost:8282</code> or your configured host/port.</p>"},{"location":"usage/#initial-configuration","title":"Initial Configuration","text":"<p>If it's the first time you're accessing the UI, you will be prompted to set up your credentials. You can skip this step if you don't want to enable authentication. If you choose to set up credentials, enter a username and password confirm password, then click Save. You will be redirected to the settings page.</p>"},{"location":"usage/#debrid-configuration","title":"Debrid Configuration","text":"<p> - Click on Debrid in the tab - Add your desired Debrid services (Real Debrid, Torbox, Debrid Link, All Debrid) by entering the required API keys or tokens. - Set the Mount/Rclone Folder. This is where decypharr will look for added torrents to symlink them to your media library.    - If you're using internal webdav, do not forget the <code>/__all__</code> suffix - Enable WebDAV - You can leave the remaining settings as default for now.</p>"},{"location":"usage/#qbittorent-configuration","title":"Qbittorent Configuration","text":"<ul> <li>Click on Qbittorrent in the tab</li> <li>Set the Download Folder to where you want Decypharr to save downloaded files. These files will be symlinked to the mount folder you configured earlier.</li> <li>Set Always Remove Tracker URLs  if you want to always remove the tracker URLs torrents and magnet links. This is useful if you want to download private tracker torrents without breaking the rules, but will make uncached torrents always stall. You can leave the remaining settings as default for now.</li> </ul>"},{"location":"usage/#arrs-configuration","title":"Arrs Configuration","text":"<p>You can skip Arr configuration for now. Decypharr will auto-add them when you connect to Sonarr or Radarr later.</p>"},{"location":"usage/#connecting-to-sonarrradarr","title":"Connecting to Sonarr/Radarr","text":"<p> To connect Decypharr to your Sonarr or Radarr instance:</p> <ol> <li>In Sonarr/Radarr, go to Settings \u2192 Download Client \u2192 Add Client \u2192 qBittorrent</li> <li>Configure the following settings:</li> <li>Host: <code>localhost</code> (or the IP of your Decypharr server)</li> <li>Port: <code>8282</code> (or your configured qBittorrent port)</li> <li>Username: <code>http://sonarr:8989</code> (your Arr host with http/https)</li> <li>Password: <code>sonarr_token</code> (your Arr API token, you can get this from Sonarr/Radarr settings)</li> <li>Category: e.g., <code>sonarr</code>, <code>radarr</code> (match what you configured in Decypharr)</li> <li>Use SSL: <code>No</code></li> <li>Sequential Download: <code>No</code> or <code>Yes</code> (if you want to download torrents locally instead of symlink)</li> <li>First and Last First: <code>No</code> by default or <code>Yes</code> if you want to remove torrent tracker URLs from the torrents. This can make it possible to download private trackers torrents without breaking the rules.</li> <li>Click Test to verify the connection</li> <li>Click Save to add the download client</li> </ol>"},{"location":"usage/#rclone-configuration","title":"Rclone Configuration","text":"<p>If you want Decypharr to automatically mount WebDAV folders using Rclone, you need to set up Rclone first:</p> <p>If you're using Docker, the rclone binary is already included in the container. If you're running Decypharr directly, make sure Rclone is installed on your system.</p> <p>Enable Mount   - Global Mount Path: Set the path where you want to mount the WebDAV folders (e.g., <code>/mnt/remote</code>). Decypharr will create subfolders for each Debrid service. For example, if you set <code>/mnt/remote</code>, it will create <code>/mnt/remote/realdebrid</code>, <code>/mnt/remote/torbox</code>, etc. This should be the grandparent of your mount folder set in the Debrid configuration.   - User ID: Set the user ID for Rclone mounts (default is gotten from the environment variable <code>PUID</code>).   - Group ID: Set the group ID for Rclone mounts (default is gotten from the environment variable <code>PGID</code>).   - Buffer Size: Set the buffer size for Rclone mounts.</p> <p>You should set other options based on your use case. If you don't know what you're doing, leave it as defaults. Checkout the Rclone documentation for more details.</p>"},{"location":"usage/#repair-configuration","title":"Repair Configuration","text":"<p>Repair is an optional feature that allows you to fix missing files, symlinks, and other issues in your media library. - Click on Repair in the tab - Enable Scheduled Repair if you want Decypharr to automatically check for missing files at your specified interval. - Set the Repair Interval to how often you want Decypharr to check for missing files (e.g 1h, 6h, 12h, 24h, you can also use cron syntax like <code>0 0 * * *</code> for daily checks). - Enable WebDav(You shoukd enable this, if you enabled WebDav in Debrid configuration) - Auto Process: Enable this if you want Decypharr to automatically process repair jobs when they are done. This could delete the original files, symlinks, be wary!!! - Worker Threads: Set the number of worker threads for processing repair jobs. More threads can speed up the process but may consume more resources.</p>"},{"location":"features/","title":"Features Overview","text":"<p>Decypharr extends the functionality of qBittorrent by integrating with Debrid services, providing several powerful features that enhance your media management experience.</p>"},{"location":"features/#core-features","title":"Core Features","text":""},{"location":"features/#mock-qbittorrent-api","title":"Mock qBittorrent API","text":"<p>Decypharr implements a complete qBittorrent-compatible API that can be used with Sonarr, Radarr, Lidarr, and other Arr applications. This allows you to:</p> <ul> <li>Seamlessly integrate with your existing Arr setup</li> <li>Use familiar interfaces to manage your downloads</li> <li>Benefit from Debrid services without changing your workflow</li> </ul>"},{"location":"features/#comprehensive-ui","title":"Comprehensive UI","text":"<p>The Decypharr user interface provides:</p> <ul> <li>Torrent management capabilities</li> <li>Status monitoring</li> <li>Configuration options</li> <li>Multiple Debrid provider integration</li> </ul>"},{"location":"features/#advanced-features","title":"Advanced Features","text":"<p>Decypharr includes several advanced features that extend its capabilities:</p> <ul> <li>Repair Support: Identifies and fixes issues with your media files</li> <li>WebDav Server: Provides direct access to your Debrid files</li> <li>Mounting Support: Allows you to mount Debrid services using rclone, making it easy to access your files directly from your system</li> <li>Multiple Debrid Providers: Supports Real Debrid, Torbox, Debrid Link, and All Debrid, allowing you to choose the best service for your needs</li> </ul>"},{"location":"features/#supported-debrid-providers","title":"Supported Debrid Providers","text":"<p>Decypharr supports multiple Debrid providers:</p> <ul> <li>Real Debrid</li> <li>Torbox</li> <li>Debrid Link</li> <li>All Debrid</li> <li>Premiumize(Coming Soon)</li> <li>Usenet(Coming Soon)</li> </ul> <p>Each provider can be configured separately, allowing you to use one or multiple services simultaneously.</p>"},{"location":"features/private-tracker-downloads/","title":"Private Tracker Downloads","text":"<p>It is against the rules of most private trackers to download using debrid services. That's because debrid services do not seed back.</p> <p>Despite that, many torrents from private trackers are cached on debrid services.</p> <p>This can happen if the exact same torrent is uploaded to a public tracker or if another user downloads the torrent from the private tracker using their debrid account.</p> <p>However, you do NOT want to be the first person who downloads and caches the private tracker torrent because it is a very quick way to get your private tracker account banned.</p> <p>Fortunately, decypharr offers a feature that allows you to check whether a private tracker torrent has already been cached.</p> <p>In a way, this feature lets you use your private trackers to find hashes for the latest releases that have not yet been indexed by zilean, torrentio, and other debrid-focused indexers.</p> <p>This allows you to add private tracker torrents to your debrid account without breaking the most common private tracker rules. This significantly reduces the chance of account bans, but please read the <code>Risks</code> section below for more details and other precautions you should make.</p>"},{"location":"features/private-tracker-downloads/#risks","title":"Risks","text":"<p>A lot of care has gone into ensuring this feature is compliant with most private tracker rules:</p> <ul> <li>The passkey is not leaked</li> <li>The private tracker announce URLs are not leaked</li> <li>The private tracker swarm is not leaked</li> <li>Even the torrent content is not leaked (by you)</li> </ul> <p>You are merely downloading it from another source. It's not much different than downloading a torrent that has been uploaded to MegaUpload or another file hoster.</p> <p>But it is NOT completely risk-free.</p>"},{"location":"features/private-tracker-downloads/#suspicious-looking-activity","title":"Suspicious-looking activity","text":"<p>To use this feature, you must download the <code>.torrent</code> file from the private tracker. But since you will never leech the content, it can make your account look suspicious.</p> <p>In fact, there is a strictly forbidden technique called <code>ghostleeching</code> that also requires downloading of the <code>.torrent</code> file, and tracker admins might suspect that this is what you are doing.</p> <p>We know of one user who got banned from a Unit3D-based tracker for this.</p> <p>Here is what is recommended:</p> <ul> <li>Be a good private tracker user in general. Perma-seed, upload, contribute</li> <li>Only enable <code>Interactive Search</code> in the arrs (disable <code>Automatic Search</code>)</li> <li>Only use it for content that is not on public sources yet, and you need to watch RIGHT NOW without having time to wait for the download to finish</li> <li>Do NOT use it to avoid seeding</li> </ul>"},{"location":"features/private-tracker-downloads/#accidentally-disable-this-feature","title":"Accidentally disable this feature","text":"<p>Another big risk is that you might accidentally disable the feature. The consequence will be that you actually leech the torrent from the tracker, don't seed it, and expose the private swarm to an untrusted third party.</p> <p>You should avoid this at all costs.</p> <p>Therefore, to reduce the risk further, it is recommended to enable the feature using both methods:</p> <ol> <li>Using the global <code>Always Remove Tracker URLs</code> setting in your decypharr <code>config.json</code></li> <li>And by enabling the <code>First and Last First</code> setting in Radarr / Sonarr</li> </ol> <p>This way, if one of them gets disabled, you have another backup.</p>"},{"location":"features/private-tracker-downloads/#how-to-enable-this-feature","title":"How to enable this feature","text":""},{"location":"features/private-tracker-downloads/#always-remove-tracker-urls","title":"Always Remove Tracker URLs","text":"<ul> <li>In the web UI under <code>Settings -&gt; QBitTorrent -&gt; Always Remove Tracker URLs</code></li> <li>Or in your <code>config.json</code> by setting the <code>qbittorrent.always_rm_tracker_url</code> to <code>true</code></li> </ul> <p>This ensures that the Tracker URLs are removed from ALL torrents (regardless of whether they are public, private, or how they were added).</p> <p>But this can make downloads of uncached torrents slower or stall because the tracker helps the client find peers to download from.</p> <p>If the torrent file has no tracker URLs, the torrent client can try to find peers for public torrents using DHT. However, this may be less efficient than connecting to a tracker, and the downloads may be slower or stall.</p> <p>If you only download cached torrents, there is no further downside to enabling this option.</p>"},{"location":"features/private-tracker-downloads/#only-on-specific-arr-app-clients-and-indexers","title":"Only on specific Arr-app clients and indexers","text":"<p>Alternatively, you can toggle it only for specific download clients and indexers in the Arr-apps...</p> <ul> <li>Enable <code>Show Advanced Settings</code> in your Arr app</li> <li>Add a new download client in <code>Settings -&gt; Download Clients</code> and call it something like <code>Decypharr (Private)</code></li> <li>Enable the <code>First and Last First</code> checkbox, which will tell Decypharr to remove the tracker URLs</li> <li>Add a duplicate version of your private tracker indexer for Decypharr downloads</li> <li>Untick <code>Enable Automatic Search</code></li> <li>Tick <code>Enable Interactive Search</code></li> <li>Set <code>Download Client</code> to your new <code>Decypharr (Private)</code> client (requires <code>Show Advanced Settings</code>)</li> </ul> <p>If you are using Prowlarr to sync your indexers, you can't set the <code>Download Client</code> in Prowlarr. You must update it directly in your Arr-apps after the indexers get synced. But future updates to the indexers won't reset the setting.</p>"},{"location":"features/private-tracker-downloads/#test-it","title":"Test it","text":"<p>After enabling the feature, try adding a public torrent through the Decypharr UI and a public torrent through your Arr-apps.</p> <p>Then check the decypharr log to check for a log entry like...</p> <pre><code>Removed 2 tracker URLs from torrent file\n</code></pre> <p>If you see this log entry, it means the tracker URLs are being stripped from your torrents and you can safely enable it on private tracker indexers.</p>"},{"location":"features/private-tracker-downloads/#how-it-works","title":"How it works","text":"<p>When you add a new torrent through the QBitTorrent API or through the Web UI, decypharr converts your torrent into a magnet link and then uses your debrid service's API to download that magnet link.</p> <p>The torrent magnet link contains:</p> <ol> <li>The <code>info hash</code> that uniquely identifies the torrent, files, and file names</li> <li>The torrent name</li> <li>The URLs of the tracker to connect to</li> </ol> <p>Private tracker URLs in torrents contain a <code>passkey</code>. This is a unique identifier that ties the torrent file to your private tracker account.</p> <p>Only if the <code>passkey</code> is valid will the tracker allow the torrent client to connect and download the files. This is also how private torrent trackers measure your downloads and uploads.</p> <p>The <code>Remove Tracker URLs</code> feature removes all the tracker URLs (which include your private <code>passkey</code>). This means when decypharr attempts to download the torrent, it only passes the <code>info hash</code> and torrent name to the debrid service.</p> <p>Without the tracker URLs, your debrid service has no way to connect to the private tracker to download the files, and your <code>passkey</code> and the private torrent tracker swarm are not exposed.</p> <p>But if the torrent is already cached, it's immediately added to your account.</p>"},{"location":"features/repair-worker/","title":"Repair Worker","text":"<p>The Repair Worker is a powerful feature that helps maintain the health of your media library by scanning for and fixing issues with files.</p>"},{"location":"features/repair-worker/#what-it-does","title":"What It Does","text":"<p>The Repair Worker performs the following tasks:</p> <ul> <li>Searches for broken symlinks or file references</li> <li>Identifies missing files in your library</li> <li>Locates deleted or unreadable files</li> <li>Automatically repairs issues when possible</li> </ul>"},{"location":"features/repair-worker/#configuration","title":"Configuration","text":"<p>You can enable and configure the Repair Worker in the Decypharr settings. It can be set to run at regular intervals, such as every 12 hours or daily.</p>"},{"location":"guides/","title":"Guides for setting up Decypharr","text":"<ul> <li>Manual Downloading with Decypharr</li> <li>Internal Mounting</li> </ul>"},{"location":"guides/downloading/","title":"Manual Downloading","text":""},{"location":"guides/downloading/#downloading-with-decypharr","title":"Downloading with Decypharr","text":"<p>While Decypharr provides a Qbittorent API for integration with media management applications, it also allows you to manually download torrents directly through its interface. This guide will walk you through the process of downloading torrents using Decypharr.</p> <ul> <li>You can either use the Decypharr UI to add torrents manually or use its API to automate the process.</li> </ul>"},{"location":"guides/downloading/#manual-downloading","title":"Manual Downloading","text":"<p> To manually download a torrent using Decypharr, follow these steps: 1. Navigate to the \"Download\" section in the Decypharr UI. 2. You can either upload torrent file(s) or paste magnet links directly into the input fields 3. Select the action(defaults to Symlink)</p> <ol> <li>Add any additional options, such as:</li> <li>Download Folder: Specify the folder where the downloaded files will be saved.</li> <li>Arr Category: Choose the category for the download, which helps in organizing files in your media management applications.</li> <li>Post Download Action: Select what to do after the download completes:<ul> <li>Create Symlink: Create a symlink to the downloaded files in the mount folder(default)</li> <li>Download: Download the file directly.</li> <li>No Action: Do nothing after the download completes.</li> </ul> </li> <li>Debrid Provider: Choose which Debrid service to use for the download(if you have multiple)</li> <li>Download Uncached: If enabled, Decypharr will attempt to download uncached files from the Debrid service.</li> </ol> <p>Note: - If you use an arr category, your download will go into {download_folder}/{arr}</p>"},{"location":"guides/internal-mounting/","title":"Internal Mounting","text":"<p>This guide explains how to use Decypharr's internal mounting feature to eliminate the need for external rclone setup.</p>"},{"location":"guides/internal-mounting/#overview","title":"Overview","text":"<p>Instead of requiring users to install and configure rclone separately, Decypharr can now mount your WebDAV endpoints internally using rclone as a library dependency. This provides a seamless experience where files appear as regular filesystem paths without any external dependencies.</p>"},{"location":"guides/internal-mounting/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker users: FUSE support may need to be enabled in the container depending on your Docker setup</li> <li>macOS users: May need macFUSE installed for mounting functionality</li> <li>Linux users: FUSE should be available by default on most distributions</li> <li>Windows users: Mounting functionality may be limited</li> </ul>"},{"location":"guides/internal-mounting/#configuration-options","title":"Configuration Options","text":"<p>You can set the options in the Web UI or directly in the configuration file:</p>"},{"location":"guides/internal-mounting/#note","title":"Note:","text":"<p>Check the Rclone documentation for more details on the available options: Rclone Mount Options.</p>"},{"location":"guides/internal-mounting/#how-it-works","title":"How It Works","text":"<ol> <li>WebDAV Server: Decypharr starts its internal WebDAV server for enabled providers</li> <li>Internal Mount: Rclone is used internally to mount the WebDAV endpoint to a local filesystem path</li> <li>File Access: Your applications can access files using regular filesystem paths like <code>/mnt/decypharr/realdebrid/__all__/MyMovie/</code></li> </ol>"},{"location":"guides/internal-mounting/#benefits","title":"Benefits","text":"<ul> <li>Automatic Setup: Mounting is handled automatically by Decypharr using internal rclone rcd</li> <li>Filesystem Access: Files appear as regular directories and files</li> <li>Seamless Integration: Works with existing media servers without changes</li> </ul>"},{"location":"guides/internal-mounting/#docker-compose","title":"Docker Compose","text":"<pre><code>version: '3.8'\nservices:\n  decypharr:\n    image: sirrobot01/decypharr:latest\n    container_name: decypharr\n    ports:\n      - \"8282:8282\"\n    volumes:\n      - ./config:/config\n      - /mnt:/mnt:rshared  # Important: use 'rshared' for mount propagation\n    devices:\n      - /dev/fuse:/dev/fuse:rwm\n    cap_add:\n      - SYS_ADMIN\n    security_opt:\n      - apparmor:unconfined\n    environment:\n      - UMASK=002\n      - PUID=1000  # Change to your user ID\n      - PGID=1000  # Change to your group ID\n</code></pre> <p>Important Docker Notes: - Mount volumes with <code>:rshared</code> to allow mount propagation - Include <code>/dev/fuse</code> device for FUSE mounting</p>"},{"location":"guides/internal-mounting/#troubleshooting","title":"Troubleshooting","text":""},{"location":"guides/internal-mounting/#mount-failures","title":"Mount Failures","text":"<p>If mounting fails, check:</p> <ol> <li>FUSE Installation: </li> <li>macOS: Install macFUSE from https://osxfuse.github.io/</li> <li>Linux: Install fuse package (<code>apt install fuse</code> or <code>yum install fuse</code>)</li> <li>Docker: Fuse is already included in the container, but ensure the host supports it</li> <li>Permissions: Ensure the application has sufficient privileges</li> </ol>"},{"location":"guides/internal-mounting/#no-mount-methods-available","title":"No Mount Methods Available","text":"<p>If you see \"no mount method available\" errors:</p> <ol> <li>Check Platform Support: Some platforms have limited FUSE support</li> <li>Install Dependencies: Ensure FUSE libraries are installed</li> <li>Use WebDAV Directly: Access files via <code>http://localhost:8282/webdav/provider/</code></li> <li>External Mounting: Use OS-native WebDAV mounting as fallback</li> </ol>"}]}